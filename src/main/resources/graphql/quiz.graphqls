type Query {
    """
    Company
    """
    companyById( companyID : ID!): Company
    companyByName( name : ID!): Company
    companies: [Company]

    """
    Quiz
    """
    quiz: [Quiz]
    quizFindById(id: ID!): Quiz
    quizByCompanyID(companyId: ID!): Quiz
    """
    Categories
    """
    categories: [Category]
    categoryById(categoryId: ID!): Category
    """
    QuizType
    """
    quizTypes: [QuizType]
    quizTypesByName(name: String!): [QuizType]
    quizTypeByQuizTypeId(quizTypeId: ID!): QuizType
}
type Subscription{
    onQuizChange: Quiz

}

type Mutation{
    addQuiz(quiz: CreateQuiz): Quiz
}

"""
One company or client or whatever.
The goal is to aggregate Quiz.
"""
type Company{
    companyID: ID!
    name: String!
}
"""
Quiz is the questionnaire, the entity that aggregates all
the categories.
"""
type Quiz{
    quizId: ID!
    title: String!
    description: String
    categories: [Category]
    quizType: QuizType
    company: Company
}
input CreateQuiz{
    title: String!
    description: String
    categories: [CreateCategory]
    quizTypeId: ID!,
    companyID: ID!
}
"""
Category is logical grouping of questions that are expected to belong to a Quiz
This is to showcase documentation on the schema...
"""
type Category{
    categoryId: ID
    name: String!
    finished: Boolean!
    questions: [Question]!
    quiz: Quiz
}
input CreateCategory{
    name: String!
    finished: Boolean!
    questions: [CreateQuestion]!
}

"""
Questions are the center of the quiz.
They should belong to a category
"""
type Question{
    id: ID!,
    text: String!,
    answer: String,
    mandatory: Boolean!
}

input CreateQuestion{
    text: String!,
    answer: String,
    mandatory: Boolean!
}

"""
Quiz type - The type of the quiz, whatever that can be
"""
type QuizType{
    quizTypeId: ID!,
    name: String!
}
input CreateQuizType{
    name: String!
}
